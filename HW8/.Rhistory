df <- read.csv("http://www.stat.cmu.edu/~pfreeman/heart_disease.csv",stringsAsFactors=TRUE)
df <- df[,-10]
w  <- which(df$Cost > 0)
df <- df[w,]
df$Cost          <- log(df$Cost)
df$Complications <- factor(df$Complications)
df$Drugs         <- factor(df$Drugs)
summary(df)
# FILL ME IN
set.seed(50)
s = sample(nrow(df) , round(0.7*nrow(df)))
df.train = df[s,]
df.test = df[-s,]
# FILL ME IN
lm.out <- lm(Cost~.,data=df.train)
summary(lm.out)
suppressMessages(library(tidyverse))
# FILL ME IN
Cost.pred <- predict(lm.out, newdata = df.test)
df.plot <- data.frame("x" = df.test$Cost-Cost.pred)
#ggplot(data = data.plot , mapping = aes(x = ))
suppressMessages(library(tidyverse))
# FILL ME IN
Cost.pred <- predict(lm.out, newdata = df.test)
df.plot <- data.frame("x" = df.test$Cost-Cost.pred)
ggplot(data = data.plot , mapping = aes(x = x)) +
geom_histogram(bins = 20 , fill = 'red') + xlab("Residuals") + ylab("Frequency")
suppressMessages(library(tidyverse))
# FILL ME IN
Cost.pred <- predict(lm.out, newdata = df.test)
df.plot <- data.frame("x" = df.test$Cost-Cost.pred)
ggplot(data = df.plot , mapping = aes(x = x)) +
geom_histogram(bins = 20 , fill = 'red') + xlab("Residuals") + ylab("Frequency")
suppressMessages(library(tidyverse))
# FILL ME IN
Cost.pred <- predict(lm.out, newdata = df.test)
df.plot <- data.frame("x" = df.test$Cost-Cost.pred)
ggplot(data = df.plot , mapping = aes(x = x)) +
geom_histogram(bins = 20 , fill = 'red') + xlab("Model Residuals") + ylab("Count")
# FILL ME IN
e <- df.plot$x - Cost.pred
shapiro.test(e)$p.value
df <- read.csv("http://www.stat.cmu.edu/~pfreeman/heart_disease.csv",stringsAsFactors=TRUE)
df <- df[,-10]
w  <- which(df$Cost > 0)
df <- df[w,]
df$Cost          <- log(df$Cost)
df$Complications <- factor(df$Complications)
df$Drugs         <- factor(df$Drugs)
summary(df)
# FILL ME IN
set.seed(50)
s = sample(nrow(df) , round(0.7*nrow(df)))
df.train = df[s,]
df.test = df[-s,]
# FILL ME IN
lm.out <- lm(Cost~.,data=df.train)
summary(lm.out)
# FILL ME IN
df.plot <- data.frame("x"=df.test$Cost,"y"=Cost.pred)
ggplot(df.plot, aes(x = x, y = y)) +
geom_point(alpha = 0.6, color = "blue") +          # Scatter plot points
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +  # Diagonal line
xlim(c(min(df.plot$x), max(df.plot$x))) +    # Set limits for both axes
ylim(c(min(df.plot$y), max(df.plot$y))) +
ggtitle("Predicted vs Observed Log-Cost") +        # Title for the plot
xlab("Observed Log-Cost") +                        # Label for x-axis
ylab("Predicted Log-Cost")
df <- read.csv("http://www.stat.cmu.edu/~pfreeman/heart_disease.csv",stringsAsFactors=TRUE)
df <- df[,-10]
w  <- which(df$Cost > 0)
df <- df[w,]
df$Cost          <- log(df$Cost)
df$Complications <- factor(df$Complications)
df$Drugs         <- factor(df$Drugs)
summary(df)
# FILL ME IN
set.seed(50)
s = sample(nrow(df) , round(0.7*nrow(df)))
df.train = df[s,]
df.test = df[-s,]
# FILL ME IN
lm.out <- lm(Cost~.,data=df.train)
summary(lm.out)
suppressMessages(library(tidyverse))
# FILL ME IN
Cost.pred <- predict(lm.out, newdata = df.test)
df.plot <- data.frame("x" = df.test$Cost-Cost.pred)
ggplot(data = df.plot , mapping = aes(x = x)) +
geom_histogram(bins = 20 , fill = 'red') + xlab("Model Residuals") + ylab("Count")
# FILL ME IN
shapiro.test(df.plot$x)$p.value
# FILL ME IN
df.plot <- data.frame("x" = Cost.pred , "y" = df.test$Cost - Cost.pred)
ggplot(data = df.plot , mapping = aes(x = x , y = y)) +
geom_point(alpha = 0.6 , color = "seagreen") +
xlab("Predicted Values") + ylab("Residuals")
suppressMessages(library(car))
# FILL ME IN
ncvTest(lm.out)
# FILL ME IN
df.plot <- data.frame("x"=df.test$Cost,"y"=Cost.pred)
ggplot(df.plot, aes(x = x, y = y)) +
geom_point(alpha = 0.6, color = "blue") +          # Scatter plot points
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +  # Diagonal line
xlim(c(min(df.plot$x), max(df.plot$x))) +    # Set limits for both axes
ylim(c(min(df.plot$y), max(df.plot$y))) +
ggtitle("Predicted vs Observed Log-Cost") +        # Title for the plot
xlab("Observed Log-Cost") +                        # Label for x-axis
ylab("Predicted Log-Cost")
# FILL ME IN
vif(lm.out)
# FILL ME IN
# Make predictions on the test set
Cost.pred <- predict(lm.out, newdata = df.test)
# Calculate the residuals
residuals <- df.test$Cost - Cost.pred
# Compute Mean Squared Error (MSE)
mse <- mean(residuals^2)
# Print the MSE
print(mse)
