x <- list(c("a","b"),1:3)
x
unlist(x)
x <- c(5,3,7,1) # the 4th element is the smallest, then the 2nd element, then the 1st, then the 3rd
sort(x)
order(x)
x <- c(5,3,7,1)
sort(x)
order(x)
x <- c(5,3,7,1)
x
sort(x)
order(x)
pbinom(5,size=10,prob=0.5)
pnorm(60,mean=75,sd=10)
qnorm(0.6,mean=75,sd=10)
seq(0,10,by=0.1)
y <- dnorm(x)
y <- dnorm(x)
y
plot(x,y,type="1")
x <- seq(0,10,by = 1)
y <- dnorm(x)
plot(x,y,type="1")
x <- seq(0,10,by = 3)
y <- dnorm(x)
plot(x,y,type="1")
x <- seq(1,10,by = 3)
mean(x)
x <- seq(1,10,by = 1)
mean(x)
x <- seq(0,10,by = 1)
mean(x)
# FILL ME IN
x <- seq(0,10,by = 1)
y <- dnorm(x,mean=5,sd=2)
plot(x,y,type="1")
x <- seq(0,10,by = 1)
y <- dnorm(x,mean=5,sd=2)
plot(x,y,type="l")
# FILL ME IN
x <- seq(0,10,by = 0.1)
y <- dnorm(x,mean=5,sd=2)
plot(x,y,type="l")
# FILL ME IN
x <- seq(0,10,by = by0.1)
# FILL ME IN
x <- seq(0,10,by = 0.1)
y <- dnorm(x,mean=5,sd=2)
plot(x,y,type="l")
pbinom(5,size=10,prob=0.5)
?pbinom
?pnorm
# FILL ME IN
c <- pnorm(4,mean=5,sd=2)
1-c
# FILL ME IN
x <- seq(0, 20 , by = 1)
x
y <- dbinom(x, size = 20, prob = 0.5)
plot(x,y, typ="l")
# FILL ME IN
x <- seq(0, 20 , by = 1)
x
y <- dbinom(x, size = 21, prob = 0.5)
plot(x,y, typ="l")
# FILL ME IN
x <- seq(0, 20 , by = 1)
x
y <- dbinom(x, size = 21, prob = 0.5)
plot(x,y, pch = 19)
# FILL ME IN
x <- seq(0, 20 , by = 1)
x
y <- dbinom(x, size = 21, prob = 0.5)
plot(x,y, pch = 19)
x <- seq(0, 20 , by = 1)
x
y <- dbinom(x, size = 21, prob = 0.1)
plot(x,y, pch = 19)
# FILL ME IN
x <- seq(0, 20 , by = 1)
y <- dbinom(x, size = 21, prob = 0.5)
plot(x,y, pch = 19)
x <- seq(0, 20 , by = 1)
y <- dbinom(x, size = 21, prob = 0.1)
plot(x,y, pch = 19)
x <- seq(0, 20 , by = 1)
y <- dbinom(x, size = 21, prob = 0.9)
plot(x,y, pch = 19)
# FILL ME IN
set.seed(101)
k <- 10000
x <- rnorm(20,mean=5,sd=1)
x.bar <- rep(NA,k)
for ( ii in 1:k ) {
s <- sample(length(x),length(x),replace=TRUE)
x.bar[ii] <- mean(x[s])
}
quantile(x.bar,probs=c(0.025,0.975))
# FILL ME IN
set.seed(101)
k <- 10000
x <- rnorm(20,mean=5,sd=1)
x.bar <- rep(NA,k)
for ( ii in 1:k ) {
s <- sample(length(x),length(x),replace=TRUE)
x.bar[ii] <- median(x[s])
}
quantile(x.bar,probs=c(0.025,0.975))
?filter()
# FILL ME IN
df.new %>% group_by(., type) %>% summarize(.,Median = median(u))
type <- rep("FAINT",nrow(df.new))
load(url("https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/BUZZARD/Buzzard_DC1.Rdata"))
set.seed(101)
s  <- sample(nrow(df),4000)
df <- df[s,-c(7:13)]
# FILL ME IN
dim(df)
nrow(df)
ncol(df)
length(df)
# FILL ME IN
names(df)
# FILL ME IN
summary(df)
suppressMessages(library(tidyverse))
head(df[,1:2])                         # base R
df %>% select(.,u,g) %>% head(.)       # dplyr
# FILL ME IN
df %>% filter(., i < 25 & g > 22) %>% arrange(y) %>% head(.,6)
# FILL ME IN
df %>% select(g) %>% round() %>% table()
# FILL ME IN
df %>% filter(., u == 99 | g == 99 | z == 99 | y == 99) %>% nrow()
# FILL ME IN
df.new <- filter(df , (u != 99 & g != 99 & z != 99 & y != 99))
dim(df.new)
summary(df.new)
type <- rep("FAINT",nrow(df.new))
w <- which(df.new$i<25)
type[w] <- "BRIGHT"
type <- factor(type)
unique(type)
df.new <- cbind(type,df.new)
# FILL ME IN
df.new %>% group_by(., type) %>% summarize(.,Number = n())
# FILL ME IN
df.new %>% group_by(., type) %>% summarize(.,Median = median(u))
# FILL ME IN
df.newer <- mutate(df.new , gr = g - r , ri = r - i)
summary(df.newer)
df.newer
# FILL ME IN
df.newer %>% group_by(., type) %>% summarize(., Mean_gr = mean(gr) , Mean_ri = mean(ri))
gr.faint  <- df.newer$gr[df.newer$type=="FAINT"]
gr.bright <- df.newer$gr[df.newer$type=="BRIGHT"]
hist(gr.faint,prob=TRUE,main=NULL,col=alpha("firebrick",0.4),ylim=c(0,1.2),xlab="color",breaks=seq(-1.5,5.5,by=0.2))
hist(gr.bright,prob=TRUE,main=NULL,col=alpha("dodgerblue",0.4),breaks=seq(-1.5,5.5,by=0.2),add=TRUE)
# FILL ME IN
t.test(gr.faint , gr.bright , alternative = "two.sided" )
# FILL ME IN
df.newer <- mutate(df.new , gr = g - r , ri = r - i)
summary(df.newer)
#df.newer
# FILL ME IN
df.quant <- df %>% select(-Gender , - Drugs , -Complications)
# FILL ME IN
df.quant <- df %<% select(-Gender , - Drugs , -Complications)
# FILL ME IN
df <- read.csv("heart_disease.csv" , header = TRUE)
df
# FILL ME IN
summary(df)
# FILL ME IN
df$Drugs <- factor(df$Drugs)
df$Complications <- factor(df$Complications)
summary(df)
names(df)
suppressMessages(library(tidyverse))
df <- df %>% select(-id)
names(df)
# FILL ME IN
# FILL ME IN
df.quant <- df %>% select(-Gender , - Drugs , -Complications)
# FILL ME IN
df.quant <- df %>% select(-Gender , - Drugs , -Complications)
ggplot(df.quant_long, aes(x = value)) +
geom_histogram(col = "burlywood", fill = "lightblue", bins = 30) +
facet_wrap(~variable, scales = "free_x") +
theme_minimal()
# FILL ME IN
df.quant <- df %>% select(-Gender , - Drugs , -Complications)
ggplot(df.quant, aes(x = value)) +
geom_histogram(col = "burlywood", fill = "lightblue", bins = 30) +
facet_wrap(~variable, scales = "free_x") +
theme_minimal()
# FILL ME IN
df.quant <- df %>% select(-Gender , - Drugs , -Complications)
df.quant_long <-df.quant %>%
gather(key = "variable", value = "value")
ggplot(df.quant_long, aes(x = value)) +
geom_histogram(col = "burlywood", fill = "lightblue", bins = 30) +
facet_wrap(~variable, scales = "free_x") +
theme_minimal()
# FILL ME IN
hist(log10(df$Cost),col="blue")
df %>% filter(.,Cost>0) -> df
df$Cost = log10(df$Cost)
# FILL ME IN
gender_table <- table(data$Gender)
# FILL ME IN
gender_table <- table(df$Gender)
drugs_table <- table(df$Drugs)
complications_table <- table(df$Complications)
print(gender_table)
print(drugs_table)
print(complications_table)
df.cat <- data %>%
select(Gender, Drugs, Complications) %>%
gather(key = "variable", value = "value")
# FILL ME IN
gender_table <- table(df$Gender)
drugs_table <- table(df$Drugs)
complications_table <- table(df$Complications)
print(gender_table)
print(drugs_table)
print(complications_table)
df.cat <- df %>%
select(Gender, Drugs, Complications) %>%
gather(key = "variable", value = "value")
ggplot(df.cat, aes(x = value)) +
geom_bar(col = "black", fill = "lightblue") +
facet_wrap(~variable, scales = "free_x") +
labs(x = "Category", y = "Count") +
theme_minimal()
# FILL ME IN
table(df$Drugs , df$Complications)
# FILL ME IN
df.cat <- df %>%
select(Gender, Drugs, Complications) %>%
gather(key = "variable", value = "value")
ggplot(df.cat, aes(x = value, y = rep(log(df$Cost), 3))) +
geom_boxplot(fill = "lightblue", color = "black") +
facet_wrap(~variable, scales = "free_x") +
ylab("Log Cost") +
xlab("Categorical Variables") +
theme_minimal()
# FILL ME IN
df.cat <- df %>%
select(Gender, Drugs, Complications) %>%
gather(key = "variable", value = "value")
ggplot(df.cat, aes(x = value, y = rep(log(df$Cost), 3))) +
geom_point(fill = "lightblue", color = "black") +
facet_wrap(~variable, scales = "free_x") +
ylab("Log Cost") +
xlab("Categorical Variables") +
theme_minimal()
# FILL ME IN
df.cat <- df %>%
select(Age, Interventions, ERVisit, Comorbidities, Duration) %>%
gather(key = "variable", value = "value")
ggplot(df.cat, aes(x = value, y = rep(log(df$Cost), 5))) +
geom_point(alpha = 0.6, color = "black") +
facet_wrap(~variable, scales = "free_x") +
ylab("Cost") +
xlab("Quantitative Variables") +
theme_minimal()
install.packages("corrplot")
suppressMessages(library(corrplot))
# FILL ME IN
suppressMessages(library(corrplot))
# FILL ME IN
df.quant <- df.select(Age, Interventions, ERVisit, Comorbidities, Duration)
suppressMessages(library(corrplot))
# FILL ME IN
df.quant <- df %<% select(Age, Interventions, ERVisit, Comorbidities, Duration)
suppressMessages(library(corrplot))
# FILL ME IN
df.quant <- df %>% select(Age, Interventions, ERVisit, Comorbidities, Duration)
cor_matrix <- cor(df.quant)
corrplot(cor_matrix, method = "ellipse")
(df <- data.frame(x=1:3,y=1:3,z=1:3))
# FILL ME IN
dist(rbind(df[2,] , df[3,]))
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
# FILL ME IN
names(df)
df.new <- df %>% filter(., dec > 56 & ra < 264 & (v < -250 & v > -350)) %>% mutate(gr = g - r , ri = r - i)
df.new %>% select(., -v, -g, -r, -i) -> df.new
names(df.new)
suppressMessages(library(GGally))
# FILL ME IN
df_scaled <- kmeans(scale(df.new),2,nstart = 10)
ggpairs(df.new,progress=FALSE,mapping=aes(color=factor(df_scaled$cluster)))
# FILL ME IN
table(df_scaled$cluster)
total_SS <- sum(scale(df.new)^2)
between_SS <- df_scaled$betweenss
ratio <- between_SS / total_SS
ratio
# FILL ME IN
wss <- rep(NA,10)
for ( ii in 1:10 ) {
km.out <- kmeans(scale(df.new),ii,nstart=20)
wss[ii] <- km.out$tot.withinss;
}
df.plot <- data.frame("k"=1:10,wss)
ggplot(data=df.plot,mapping=aes(x=k,y=wss)) +
geom_point(col="seagreen") +
geom_line(col="seagreen") +
ylab("Within-Cluster Sum-of-Squares")
# FILL ME IN
library(cluster)
ss <- rep(NA,10)
for ( ii in 2:10 ) {
km.out <- kmeans(scale(df.new),ii,nstart=20)
ss[ii] <- mean(silhouette(km.out$cluster,
dist(scale(df)))[,3])
}
# FILL ME IN
wss <- rep(NA,10)
for ( ii in 1:10 ) {
km.out <- kmeans(scale(df.new),ii,nstart=20)
wss[ii] <- km.out$tot.withinss;
}
df.plot <- data.frame("k"=1:10,wss)
ggplot(data=df.plot,mapping=aes(x=k,y=wss)) +
geom_point(col="seagreen") +
geom_line(col="seagreen") +
ylab("Within-Cluster Sum-of-Squares")
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %>% select(., -X ,-cut , -color , -clarity) <- df.new
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %<% select(., -X ,-cut , -color , -clarity) <- df.new
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %>% select(., -X ,-cut , -color , -clarity) -> df.new
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %>% select(., -X ,-cut , -color , -clarity) -> df.new
names(df.new)
?slice()
# FILL ME IN
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
# FILL ME IN
kmeans <- clusGap(df.small, FUN = kmeans, K.max = 8)
fviz_gap_stat(kmeans)
install.packages("factoextra")
# FILL ME IN
library(factoextra)
kmeans <- clusGap(df.small, FUN = kmeans, K.max = 8)
# FILL ME IN
library(factoextra)
library(cluster)
kmeans <- clusGap(df.small, FUN = kmeans, K.max = 8)
(df <- data.frame(x=1:3,y=1:3,z=1:3))
# FILL ME IN
dist(rbind(df[2,] , df[3,]))
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
# FILL ME IN
names(df)
df.new <- df %>% filter(., dec > 56 & ra < 264 & (v < -250 & v > -350)) %>% mutate(gr = g - r , ri = r - i)
df.new %>% select(., -v, -g, -r, -i) -> df.new
names(df.new)
suppressMessages(library(GGally))
# FILL ME IN
df_scaled <- kmeans(scale(df.new),2,nstart = 10)
ggpairs(df.new,progress=FALSE,mapping=aes(color=factor(df_scaled$cluster)))
# FILL ME IN
table(df_scaled$cluster)
total_SS <- sum(scale(df.new)^2)
between_SS <- df_scaled$betweenss
ratio <- between_SS / total_SS
ratio
# FILL ME IN
wss <- rep(NA,10)
for ( ii in 1:10 ) {
km.out <- kmeans(scale(df.new),ii,nstart=20)
wss[ii] <- km.out$tot.withinss;
}
df.plot <- data.frame("k"=1:10,wss)
ggplot(data=df.plot,mapping=aes(x=k,y=wss)) +
geom_point(col="seagreen") +
geom_line(col="seagreen") +
ylab("Within-Cluster Sum-of-Squares")
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %>% select(., -X ,-cut , -color , -clarity) -> df.new
names(df.new)
# FILL ME IN
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
# FILL ME IN
gs <- clusGap(df.small, FUN = kmeans, K.max = 8)
# FILL ME IN
rm(kmeans)
gc()
#gs <- clusGap(df.small, FUN = kmeans, K.max = 8)
#fviz_gap_stat(kmeans)
# FILL ME IN
#rm(kmeans)
#gc()
gs <- clusGap(df.small, FUN = kmeans, K.max = 8)
install.packages("cluster")
install.packages("factoextra")
# FILL ME IN
#rm(kmeans)
#gc()
library(cluster)
library(factoextra)
gs <- clusGap(df.small, FUN = kmeans, K.max = 8)
fviz_gap_stat(gs)
# FILL ME IN
optimal_k <- which.max(gs$Tab[, "gap"])
set.seed(10)
km <- kmeans(scale(df.small) , centers = optimal_k ,nstart = 20)
ggpairs(df.small,progress=FALSE,mapping=aes(color=factor(km$cluster)))
(df <- data.frame(x=1:3,y=1:3,z=1:3))
# FILL ME IN
dist(rbind(df[2,] , df[3,]))
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
# FILL ME IN
names(df)
df.new <- df %>% filter(., dec > 56 & ra < 264 & (v < -250 & v > -350)) %>% mutate(gr = g - r , ri = r - i)
df.new %>% select(., -v, -g, -r, -i) -> df.new
names(df.new)
suppressMessages(library(GGally))
# FILL ME IN
set.seed(25)
df_scaled <- kmeans(scale(df.new),2,nstart = 10)
ggpairs(df.new,progress=FALSE,mapping=aes(color=factor(df_scaled$cluster)))
# FILL ME IN
table(df_scaled$cluster)
total_SS <- sum(scale(df.new)^2)
between_SS <- df_scaled$betweenss
ratio <- between_SS / total_SS
ratio
# FILL ME IN
wss <- rep(NA,10)
for ( ii in 1:10 ) {
km.out <- kmeans(scale(df.new),ii,nstart=20)
wss[ii] <- km.out$tot.withinss;
}
df.plot <- data.frame("k"=1:10,wss)
ggplot(data=df.plot,mapping=aes(x=k,y=wss)) +
geom_point(col="seagreen") +
geom_line(col="seagreen") +
ylab("Within-Cluster Sum-of-Squares")
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
df.new %>% select(., -X ,-cut , -color , -clarity) -> df.new
names(df.new)
# FILL ME IN
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
# FILL ME IN
#rm(kmeans)
#gc()
library(cluster)
library(factoextra)
gs <- clusGap(df.small, FUN = kmeans, K.max = 8)
fviz_gap_stat(gs)
# FILL ME IN
optimal_k <- which.max(gs$Tab[, "gap"])
set.seed(10)
km <- kmeans(scale(df.small) , centers = optimal_k ,nstart = 20)
ggpairs(df.small,progress=FALSE,mapping=aes(color=factor(km$cluster)))
install.packages("clustMixType")
library(clustMixType)
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
?validation_kproto()
library(clustMixType)
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
validation_kproto(method = "silhoutte" , data = df.small , k = 2:5 , nstart = 5 , verbose = FALSE)
library(clustMixType)
# FILL ME IN
df.new <- read.csv("diamonds.csv" , stringsAsFactors = TRUE)
set.seed(303)
s <- sort(sample(nrow(df.new),1000))
df.small <- slice(df.new , s)
validation_kproto(method = "silhouette" , data = df.small , k = 2:5 , nstart = 5 , verbose = FALSE)
# FILL ME IN
kp.out <- kproto(df.small,2,nstart=5,verbose=FALSE)
plot(kp.out)
