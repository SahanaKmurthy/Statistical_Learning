set.seed(505)
(df <- data.frame(x=runif(3),y=runif(3),z=runif(3)))
# FILL ME IN
df.scaled <- scale(df)
dist_matrix <- dist(df.scaled)
# FILL ME IN
df.scaled <- scale(df)
dist_matrix <- dist(df.scaled)
dist_matrix
?hclust()
# FILL ME IN
hc.out <- hclust(dist_matrix, method = "complete")
plot(hc.out)
# FILL ME IN
hc.out <- hclust(dist_matrix, method = "complete")
plot(hc.out)
hc.out$height[1]
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
df %>%
filter(.,ra<264 & dec>56 & v>-350 & v< -250) %>%
mutate(.,gr=g-r,ri=r-i) %>%
select(.,-g,-r,-i,-v) -> df.new
# FILL ME IN
df.new <- hclust(scale(df) , method = "complete")
# FILL ME IN
df.new <- hclust(dist(scale(df)) , method = "complete")
plot(df.new, labels = FALSE)
dfnew.avg <- hclust(dist(scale(df)) , method = "average")
plot(dfnew.avg, labels = FALSE)
?cutree()
library(GGally)
# FILL ME IN
cutree(df.new , k = 2)
library(GGally)
# FILL ME IN
hc <- cutree(df.new , k = 2)
df_scaled <- kmeans(scale(df),2,nstart = 10)
ggpairs(df.new,progress=FALSE,mapping = aes(color = factor(clusters_hc)))
library(GGally)
# FILL ME IN
hc <- cutree(df.new , k = 2)
df_scaled <- kmeans(scale(df),2,nstart = 10)
ggpairs(df,progress=FALSE,mapping = aes(color = factor(clusters_hc)))
library(GGally)
# FILL ME IN
hc <- cutree(df.new , k = 2)
ggpairs(df,progress=FALSE,mapping = aes(color = factor(hc)))
install.packages("ClusterR")
library(ClusterR)
# FILL ME IN
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df.new, gaussian_comps = 2)
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df, gaussian_comps = 2)
pred <- predict_GMM(df, gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
gmm.out$centroids
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df, gaussian_comps = 2)
pred <- predict_GMM(df, gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
pred
gmm.out$centroids
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
pred
gmm.out$centroids
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
pred$cluster_proba
gmm.out$centroids
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum[proba[,1] > 0.95]
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum([proba[,1] > 0.95])
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,2] > 0.95)
total <- cluster1 + cluster2
percentage <- total / nrow(proba)
percentage
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,1] < 0.05)
total <- cluster1 + cluster2
percentage <- total / nrow(proba)
percentage
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,1] < 0.05)
#total <- cluster1 + cluster2
percentage <- cluster1 / nrow(proba)
percentage
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(scale(df), gaussian_comps = 2)
pred <- predict_GMM(scale(df), gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,1] < 0.05)
#total <- cluster1 + cluster2
percentage <- cluster2 / nrow(proba)
percentage
library(GGally)
# FILL ME IN
hc <- cutree(df.new , k = 2)
ggpairs(df.new,progress=FALSE,mapping = aes(color = factor(hc)))
library(GGally)
# FILL ME IN
hc <- cutree(df.new , k = 2)
ggpairs(df,progress=FALSE,mapping = aes(color = factor(hc)))
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df.new, gaussian_comps = 2)
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
df %>%
filter(.,ra<264 & dec>56 & v>-350 & v< -250) %>%
mutate(.,gr=g-r,ri=r-i) %>%
select(.,-g,-r,-i,-v) -> df.new
# FILL ME IN
dfnew.complete <- hclust(dist(scale(df)) , method = "complete")
plot(df.new, labels = FALSE)
dfnew.avg <- hclust(dist(scale(df)) , method = "average")
plot(dfnew.avg, labels = FALSE)
library(GGally)
# FILL ME IN
hc <- cutree(dfnew.complete , k = 2)
ggpairs(df.new,progress=FALSE,mapping = aes(color = factor(hc)))
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df.new, gaussian_comps = 2)
pred <- predict_GMM(df.new, gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,1] < 0.05)
#total <- cluster1 + cluster2
percentage <- cluster2 / nrow(proba)
percentage
library(ClusterR)
# FILL ME IN
gmm.out <- GMM(df.new, gaussian_comps = 2)
pred <- predict_GMM(df.new, gmm.out$centroids, gmm.out$covariance_matrices, gmm.out$weights)
proba <- pred$cluster_proba
cluster1 <- sum(proba[,1] > 0.95)
cluster2 <- sum(proba[,1] < 0.05)
total <- cluster1 + cluster2
percentage <- total / nrow(proba)
percentage
set.seed(505)
(df <- data.frame(x=runif(3),y=runif(3),z=runif(3)))
# FILL ME IN
df.scaled <- scale(df)
dist_matrix <- dist(df.scaled)
dist_matrix
# FILL ME IN
hc.out <- hclust(dist_matrix, method = "complete")
plot(hc.out)
hc.out$height[1]
file.path <- "https://raw.githubusercontent.com/pefreeman/36-290/master/EXAMPLE_DATASETS/DRACO/draco_photometry.Rdata"
load(url(file.path))
df <- data.frame(ra,dec,"v"=velocity.los,log.g,"g"=mag.g,"r"=mag.r,"i"=mag.i)
rm(file.path,ra,dec,velocity.los,log.g,temperature,mag.u,mag.g,mag.r,mag.i,mag.z,metallicity,signal.noise)
suppressMessages(library(tidyverse))
df %>%
filter(.,ra<264 & dec>56 & v>-350 & v< -250) %>%
mutate(.,gr=g-r,ri=r-i) %>%
select(.,-g,-r,-i,-v) -> df.new
# FILL ME IN
dfnew.complete <- hclust(dist(scale(df)) , method = "complete")
plot(df.new, labels = FALSE)
dfnew.avg <- hclust(dist(scale(df)) , method = "average")
plot(dfnew.avg, labels = FALSE)
library(GGally)
# FILL ME IN
hc <- cutree(dfnew.complete , k = 2)
ggpairs(df,progress=FALSE,mapping = aes(color = factor(hc)))
